plugins {
  id 'checkstyle'
  id 'java' 
  id 'java-gradle-plugin'
  id 'maven-publish'

  id 'com.github.sherter.google-java-format' version '0.8'
}

group 'com.loosebazooka'

sourceCompatibility = 1.8

repositories {
  mavenCentral()
}

dependencies {
  testCompile 'junit:junit:4.12'
}

googleJavaFormat {
  toolVersion = '1.6'
}
check.dependsOn verifyGoogleJavaFormat

gradlePlugin {
  plugins {
    monolith {
      id = 'com.loosebazooka.consolidate'
      displayName = 'Consolidate'
      description = 'Consilidate multiple gradle projects as a single artifact'
      implementationClass = 'com.loosebazooka.gradle.consolidate.ConsolidatePlugin'
    }
  }
}

publishing {
  repositories {
    mavenLocal()
  }
}

checkstyle {
  toolVersion = '8.29'

  // use google checks from the jar
  def googleChecks = resources.text.fromArchiveEntry(configurations.checkstyle[0], 'google_checks.xml').asString()

  // set the location of the suppressions file referenced in google_checks.xml
  configProperties['org.checkstyle.google.suppressionfilter.config'] = getConfigDirectory().file('checkstyle-suppressions.xml').get().toString()

  // add in copyright header check on only java files (replace the last </module> in file)
  def copyrightChecks = '''
      <module name="RegexpHeader">
          <property name="headerFile" value="${config_loc}/copyright-java.header"/>
          <property name="fileExtensions" value="java"/>
          <property name="id" value="header"/>
      </module>
  </module>
  '''
  googleChecks = googleChecks.substring(0, googleChecks.lastIndexOf('</module>')) + copyrightChecks

  // this is the actual checkstyle config
  config = resources.text.fromString(googleChecks)

  maxErrors = 0
  maxWarnings = 0
}
